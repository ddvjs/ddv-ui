{"version":3,"file":"ddv-ui.esm.js","sources":["../packages/tree/src/tree-node.vue","../packages/tree/src/tree.vue","../packages/tree/index.js","../src/index.js"],"sourcesContent":["<template>\n  <div>\n    {{node.label}}\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DdvTreeNode',\n  props: {\n    node: {\n      type: Object,\n      default () {\n        return {}\n      }\n    },\n    level: {\n      type: Number,\n      default: 0\n    },\n    indent: {\n      type: Number\n    }\n  },\n  mounted () {\n    console.log(this.level, this.node.label, this.indent)\n  }\n}\n</script>\n\n","<script>\nimport '../../style/src/base.css'\nimport '../../style/src/tree.css'\nimport '../../style/src/iconfont/iconfont.css'\nimport DdvTreeNode from './tree-node.vue'\n\nexport default {\n  name: 'DdvTree',\n  props: {\n    data: {\n      type: Array,\n      default: (() => [])\n    },\n    indent: {\n      type: Number,\n      default: 16\n    },\n    props: {\n      type: Object,\n      default () {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      treeprops: {\n        children: 'children',\n        label: 'label'\n      },\n      lists: []\n    }\n  },\n  components: {\n    DdvTreeNode\n  },\n  methods: {\n    setProps () {\n      this.treeprops = Object.assign(this.treeprops, this.props)\n    },\n    setData () {\n      this.lists = []\n      const childData = (lists, childNoteLists = []) => {\n        lists.forEach(item => {\n          let obj = {\n            data: item,\n            node: {}\n          }\n          obj.node[this.treeprops.children] = []\n          obj.node.label = item[this.treeprops.label]\n\n          if (Array.isArray(item[this.treeprops.children]) && item[this.treeprops.children].length) {\n            childData(item[this.treeprops.children], obj.node[this.treeprops.children])\n          }\n          childNoteLists.push(obj)\n        })\n        return childNoteLists\n      }\n      this.lists = childData(this.data)\n    }\n  },\n  render (h) {\n    const treeNodes = (level, lists, renderList = []) => {\n      lists.forEach((item) => {\n        var slotRender = []\n\n        if (Array.isArray(item.node.children) && item.node.children.length) {\n          let childLevel = level\n          childLevel += 1\n          slotRender = treeNodes(childLevel, item.node.children)\n        }\n        var render = h(DdvTreeNode, {\n          props: {\n            node: item.node,\n            data: item.data,\n            level: level,\n            indent: this.indent * (level - 1)\n          }\n        }, slotRender)\n        renderList.push(render)\n      })\n      return renderList\n    }\n\n    return h('div', {\n      class: ['ddv-ui']\n    },[\n      h('div', {\n        class: ['ddv-ui__tree']\n      }, treeNodes(1, this.lists))\n    ])\n  },\n  created () {\n    this.setProps()\n    this.setData()\n  },\n  mounted () {}\n}\n</script>\n","import Tree from './src/tree.vue'\n\nTree.install = function (Vue) {\n  Vue.component(Tree.name, Tree)\n}\n\nexport default Tree\n","import Tree from '../packages/tree/index.js'\n\nconst components = [\n  Tree\n]\n\nconst install = (Vue, opts = {}) => {\n  components.forEach(component => {\n    Vue.component(component.name, component)\n  })\n}\n\nmodule.exports = {\n  version: '0.2.0',\n  install,\n  Tree\n}\n\nmodule.exports.default = module.exports\n"],"names":["const"],"mappings":";;;;;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;YALYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAHYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDZ,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;EAC5B,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAC;CAC/B;;ACFDA,IAAM,UAAU,GAAG;EACjB,IAAI;EACL;;AAEDA,IAAM,OAAO,aAAI,GAAG,EAAE,IAAS,EAAE;6BAAP,GAAG;;EAC3B,UAAU,CAAC,OAAO,WAAC,WAAU;IAC3B,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAC;GACzC,EAAC;EACH;;AAED,MAAM,CAAC,OAAO,GAAG;EACf,OAAO,EAAE,OAAO;WAChB,OAAO;QACP,IAAI;EACL;;AAED,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO"}